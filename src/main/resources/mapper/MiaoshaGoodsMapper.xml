<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.miaosha.repository.MiaoshaGoodsMapper">
  <resultMap id="BaseResultMap" type="com.imooc.miaosha.entity.MiaoshaGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="miaosha_price" jdbcType="DECIMAL" property="miaoshaPrice" />
    <result column="stock_count" jdbcType="INTEGER" property="stockCount" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <if test="criteria.orcriteria.size() != 0">
                and
                <trim prefix="(" prefixOverrides="or" suffix=")">
                    <foreach collection="criteria.orcriteria" item="criterion">
                      <choose>
                        <when test="criterion.noValue">
                          or ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                          or ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                          or (${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                        </when>
                        <when test="criterion.listValue">
                          or ${criterion.condition}
                          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                </trim>
            </if>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `goods_id`, `miaosha_price`, `stock_count`, `start_date`, `end_date`
  </sql>
  <select id="selectByExample" parameterType="com.imooc.miaosha.entity.MiaoshaGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from miaosha_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startPos != null and pageSize != null">
      limit #{startPos}, #{pageSize}
    </if>
  </select>
<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from miaosha_goods
  where `id`=#{id}
</select>
  <delete id="deleteByExample" parameterType="com.imooc.miaosha.entity.MiaoshaGoodsExample">
    delete from miaosha_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imooc.miaosha.entity.MiaoshaGoods"  useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_goods (`goods_id`, `miaosha_price`, `stock_count`, `start_date`, `end_date`)

    values (#{goodsId,jdbcType=BIGINT}, #{miaoshaPrice,jdbcType=DECIMAL}, #{stockCount,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.miaosha.entity.MiaoshaGoods" useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        `goods_id`,
      </if>
      <if test="miaoshaPrice != null">
        `miaosha_price`,
      </if>
      <if test="stockCount != null">
        `stock_count`,
      </if>
      <if test="startDate != null">
        `start_date`,
      </if>
      <if test="endDate != null">
        `end_date`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="miaoshaPrice != null">
        #{miaoshaPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockCount != null">
        #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertMiaoshaGoodsVOList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_goods (`goods_id`, `miaosha_price`, `stock_count`, `start_date`, `end_date`)

    values 
	<foreach collection="list" item="item" separator=",">
		(
		#{item.goodsId,jdbcType=BIGINT}, 
		#{item.miaoshaPrice,jdbcType=DECIMAL}, 
		#{item.stockCount,jdbcType=INTEGER}, 
		#{item.startDate,jdbcType=TIMESTAMP}, 
		#{item.endDate,jdbcType=TIMESTAMP}		)
	</foreach>
  </insert>
  <select id="countByExample" parameterType="com.imooc.miaosha.entity.MiaoshaGoodsExample" resultType="java.lang.Integer">
    select count(*) from miaosha_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update miaosha_goods
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null">
        `goods_id` = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.miaoshaPrice != null">
        `miaosha_price` = #{record.miaoshaPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockCount != null">
        `stock_count` = #{record.stockCount,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null">
        `start_date` = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        `end_date` = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update miaosha_goods
    set 
      `id` = #{record.id,jdbcType=BIGINT},
      `goods_id` = #{record.goodsId,jdbcType=BIGINT},
      `miaosha_price` = #{record.miaoshaPrice,jdbcType=DECIMAL},
      `stock_count` = #{record.stockCount,jdbcType=INTEGER},
      `start_date` = #{record.startDate,jdbcType=TIMESTAMP},
      `end_date` = #{record.endDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateMiaoshaGoodsVOList" parameterType="java.util.List" >
  <if test="example != null and example.updateFields.size != 0">
    insert into miaosha_goods (<include refid="Base_Column_List" />)
    values
	<foreach collection="recordList" item="item" separator=",">
  (#{item.id,jdbcType=BIGINT},#{item.goodsId,jdbcType=BIGINT},#{item.miaoshaPrice,jdbcType=DECIMAL},#{item.stockCount,jdbcType=INTEGER},#{item.startDate,jdbcType=TIMESTAMP},#{item.endDate,jdbcType=TIMESTAMP})
	</foreach>
	on duplicate key update
	<foreach collection="example.updateFields" item="item" separator=",">`${item}`=values(`${item}`)</foreach>
  </if>
  <if test="example == null or example.updateFields.size == 0">
     replace into miaosha_goods (<include refid="Base_Column_List" />)
    values
    <foreach collection="recordList" item="item" separator=",">
    (#{item.id,jdbcType=BIGINT},#{item.goodsId,jdbcType=BIGINT},#{item.miaoshaPrice,jdbcType=DECIMAL},#{item.stockCount,jdbcType=INTEGER},#{item.startDate,jdbcType=TIMESTAMP},#{item.endDate,jdbcType=TIMESTAMP})
    </foreach>
  </if>
  </update>
</mapper>
