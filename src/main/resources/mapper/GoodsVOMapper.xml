<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.miaosha.repository.GoodsVOMapper">
  <resultMap id="BaseResultMap" type="com.imooc.miaosha.entity.GoodsVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_detail" jdbcType="LONGVARCHAR" property="goodsDetail" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <if test="criteria.orcriteria.size() != 0">
                and
                <trim prefix="(" prefixOverrides="or" suffix=")">
                    <foreach collection="criteria.orcriteria" item="criterion">
                      <choose>
                        <when test="criterion.noValue">
                          or ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                          or ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                          or (${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                        </when>
                        <when test="criterion.listValue">
                          or ${criterion.condition}
                          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                </trim>
            </if>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `goods_name`, `goods_title`, `goods_img`, `goods_detail`, `goods_price`, `goods_stock`
  </sql>
  <select id="selectByExample" parameterType="com.imooc.miaosha.entity.GoodsVOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startPos != null and pageSize != null">
      limit #{startPos}, #{pageSize}
    </if>
  </select>
<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from goods
  where `id`=#{id}
</select>
  <delete id="deleteByExample" parameterType="com.imooc.miaosha.entity.GoodsVOExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imooc.miaosha.entity.GoodsVO"  useGeneratedKeys="true" keyProperty="id">
    insert into goods (`goods_name`, `goods_title`, `goods_img`, `goods_detail`, `goods_price`, `goods_stock`)

    values (#{goodsName,jdbcType=VARCHAR}, #{goodsTitle,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR}, #{goodsDetail,jdbcType=LONGVARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsStock,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.miaosha.entity.GoodsVO" useGeneratedKeys="true" keyProperty="id">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        `goods_name`,
      </if>
      <if test="goodsTitle != null">
        `goods_title`,
      </if>
      <if test="goodsImg != null">
        `goods_img`,
      </if>
      <if test="goodsDetail != null">
        `goods_detail`,
      </if>
      <if test="goodsPrice != null">
        `goods_price`,
      </if>
      <if test="goodsStock != null">
        `goods_stock`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetail != null">
        #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertGoodsVOList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into goods (`goods_name`, `goods_title`, `goods_img`, `goods_detail`, `goods_price`, `goods_stock`)

    values 
	<foreach collection="list" item="item" separator=",">
		(
		#{item.goodsName,jdbcType=VARCHAR}, 
		#{item.goodsTitle,jdbcType=VARCHAR}, 
		#{item.goodsImg,jdbcType=VARCHAR}, 
		#{item.goodsDetail,jdbcType=LONGVARCHAR}, 
		#{item.goodsPrice,jdbcType=DECIMAL}, 
		#{item.goodsStock,jdbcType=INTEGER}		)
	</foreach>
  </insert>
  <select id="countByExample" parameterType="com.imooc.miaosha.entity.GoodsVOExample" resultType="java.lang.Integer">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        `goods_name` = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsTitle != null">
        `goods_title` = #{record.goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsImg != null">
        `goods_img` = #{record.goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDetail != null">
        `goods_detail` = #{record.goodsDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        `goods_price` = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsStock != null">
        `goods_stock` = #{record.goodsStock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set 
      `id` = #{record.id,jdbcType=BIGINT},
      `goods_name` = #{record.goodsName,jdbcType=VARCHAR},
      `goods_title` = #{record.goodsTitle,jdbcType=VARCHAR},
      `goods_img` = #{record.goodsImg,jdbcType=VARCHAR},
      `goods_detail` = #{record.goodsDetail,jdbcType=LONGVARCHAR},
      `goods_price` = #{record.goodsPrice,jdbcType=DECIMAL},
      `goods_stock` = #{record.goodsStock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateGoodsVOList" parameterType="java.util.List" >
  <if test="example != null and example.updateFields.size != 0">
    insert into goods (<include refid="Base_Column_List" />)
    values
	<foreach collection="recordList" item="item" separator=",">
  (#{item.id,jdbcType=BIGINT},#{item.goodsName,jdbcType=VARCHAR},#{item.goodsTitle,jdbcType=VARCHAR},#{item.goodsImg,jdbcType=VARCHAR},#{item.goodsDetail,jdbcType=LONGVARCHAR},#{item.goodsPrice,jdbcType=DECIMAL},#{item.goodsStock,jdbcType=INTEGER})
	</foreach>
	on duplicate key update
	<foreach collection="example.updateFields" item="item" separator=",">`${item}`=values(`${item}`)</foreach>
  </if>
  <if test="example == null or example.updateFields.size == 0">
     replace into goods (<include refid="Base_Column_List" />)
    values
    <foreach collection="recordList" item="item" separator=",">
    (#{item.id,jdbcType=BIGINT},#{item.goodsName,jdbcType=VARCHAR},#{item.goodsTitle,jdbcType=VARCHAR},#{item.goodsImg,jdbcType=VARCHAR},#{item.goodsDetail,jdbcType=LONGVARCHAR},#{item.goodsPrice,jdbcType=DECIMAL},#{item.goodsStock,jdbcType=INTEGER})
    </foreach>
  </if>
  </update>
</mapper>
