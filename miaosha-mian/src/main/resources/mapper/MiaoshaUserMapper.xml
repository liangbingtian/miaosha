<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.miaosha.repository.MiaoshaUserMapper">
  <resultMap id="BaseResultMap" type="com.imooc.miaosha.entity.MiaoshaUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="head" jdbcType="VARCHAR" property="head" />
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <if test="criteria.orcriteria.size() != 0">
                and
                <trim prefix="(" prefixOverrides="or" suffix=")">
                    <foreach collection="criteria.orcriteria" item="criterion">
                      <choose>
                        <when test="criterion.noValue">
                          or ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                          or ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                          or (${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                        </when>
                        <when test="criterion.listValue">
                          or ${criterion.condition}
                          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                </trim>
            </if>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `nickname`, `password`, `salt`, `head`, `register_date`, `last_login_date`, `login_count`
  </sql>
  <select id="selectByExample" parameterType="com.imooc.miaosha.entity.MiaoshaUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from miaosha_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startPos != null and pageSize != null">
      limit #{startPos}, #{pageSize}
    </if>
  </select>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from miaosha_user
    where `id`=#{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByExample" parameterType="com.imooc.miaosha.entity.MiaoshaUserExample">
    delete from miaosha_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imooc.miaosha.entity.MiaoshaUser"  useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_user (`nickname`, `password`, `salt`, `head`, `register_date`, `last_login_date`, `login_count`)

    values (#{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{head,jdbcType=VARCHAR}, #{registerDate,jdbcType=TIMESTAMP}, #{lastLoginDate,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.miaosha.entity.MiaoshaUser" useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        `nickname`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        `salt`,
      </if>
      <if test="head != null">
        `head`,
      </if>
      <if test="registerDate != null">
        `register_date`,
      </if>
      <if test="lastLoginDate != null">
        `last_login_date`,
      </if>
      <if test="loginCount != null">
        `login_count`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        #{head,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertMiaoshaUserVOList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into miaosha_user (`nickname`, `password`, `salt`, `head`, `register_date`, `last_login_date`, `login_count`)

    values 
	<foreach collection="list" item="item" separator=",">
		(
		#{item.nickname,jdbcType=VARCHAR}, 
		#{item.password,jdbcType=VARCHAR}, 
		#{item.salt,jdbcType=VARCHAR}, 
		#{item.head,jdbcType=VARCHAR}, 
		#{item.registerDate,jdbcType=TIMESTAMP}, 
		#{item.lastLoginDate,jdbcType=TIMESTAMP}, 
		#{item.loginCount,jdbcType=INTEGER}		)
	</foreach>
  </insert>
  <select id="countByExample" parameterType="com.imooc.miaosha.entity.MiaoshaUserExample" resultType="java.lang.Integer">
    select count(*) from miaosha_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update miaosha_user
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nickname != null">
        `nickname` = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        `salt` = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.head != null">
        `head` = #{record.head,jdbcType=VARCHAR},
      </if>
      <if test="record.registerDate != null">
        `register_date` = #{record.registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginDate != null">
        `last_login_date` = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginCount != null">
        `login_count` = #{record.loginCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update miaosha_user
    set 
      `id` = #{record.id,jdbcType=BIGINT},
      `nickname` = #{record.nickname,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      `salt` = #{record.salt,jdbcType=VARCHAR},
      `head` = #{record.head,jdbcType=VARCHAR},
      `register_date` = #{record.registerDate,jdbcType=TIMESTAMP},
      `last_login_date` = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      `login_count` = #{record.loginCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateMiaoshaUserVOList" parameterType="java.util.List" >
  <if test="example != null and example.updateFields.size != 0">
    insert into miaosha_user (<include refid="Base_Column_List" />)
    values
	<foreach collection="recordList" item="item" separator=",">
  (#{item.id,jdbcType=BIGINT},#{item.nickname,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.salt,jdbcType=VARCHAR},#{item.head,jdbcType=VARCHAR},#{item.registerDate,jdbcType=TIMESTAMP},#{item.lastLoginDate,jdbcType=TIMESTAMP},#{item.loginCount,jdbcType=INTEGER})
	</foreach>
	on duplicate key update
	<foreach collection="example.updateFields" item="item" separator=",">`${item}`=values(`${item}`)</foreach>
  </if>
  <if test="example == null or example.updateFields.size == 0">
     replace into miaosha_user (<include refid="Base_Column_List" />)
    values
    <foreach collection="recordList" item="item" separator=",">
    (#{item.id,jdbcType=BIGINT},#{item.nickname,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.salt,jdbcType=VARCHAR},#{item.head,jdbcType=VARCHAR},#{item.registerDate,jdbcType=TIMESTAMP},#{item.lastLoginDate,jdbcType=TIMESTAMP},#{item.loginCount,jdbcType=INTEGER})
    </foreach>
  </if>
  </update>
</mapper>
